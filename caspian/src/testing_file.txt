class Node
    fun constructor(val):null
        this.head = val

    fun test_method():int
        return this.head + 1
    
    static fun new_node(val):Typeclass
        return Node(val)
  
    //iterator magic method
    fun primative::iterator()
        yield 10
        yield 20
        yield 30
    
    //getitem magic method
    fun primative::getitem(val)
        return val

    //getattr magic method
    fun primative::getattr(val)
        return val

    fun primative::type_check(type_obj:Type)
        if type_obj.__class__ != this.__class__
            return false
        
        return type_obj.type_vals[0] == int

    //all objects will inherit this primative
    static fun primative::type_check(type_obj:Type)
        return type_obj.__class__ == this.__class__

    static abstract fun test()
        return 10

    static abstract async fun test()
        return await this.some_coroutine()